#include "java_generator.h"

#include <glog/logging.h>
#include <boost/algorithm/string/join.hpp>

namespace smf_gen {
void
java_generator::generate_header_prologue() {
  VLOG(1) << "header_prologue";
  std::map<std::string, std::string> vars;
  vars["filename"] = input_filename;
  vars["OuterClass"] =  "SMF";

  printer_.print("// Generated by smfc.\n");
  printer_.print("// Any local changes WILL BE LOST.\n");
  printer_.print(vars, "// source: $filename$\n");
  printer_.print("import smf.core.SmfClient;\n");
  printer_.print("import java.util.concurrent.CompletableFuture;\n");
  printer_.print(vars, "class $OuterClass$ {\n");
  printer_.indent();
}


void
java_generator::generate_header_services() {
}

void
java_generator::generate_header_epilogue() {
  VLOG(1) << "header_epilogue";
  printer_.print("} // SMF outer class \n");
  printer_.outdent();
}
}  // namespace smf_gen
